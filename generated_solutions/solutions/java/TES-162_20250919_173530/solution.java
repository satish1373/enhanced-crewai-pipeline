
# Java Solution Generated by Senior Java Developer

```java
// Solution.java
import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.Map;

public class Solution {
    private LocalDateTime createdAt;
    
    public Solution() {
        this.createdAt = LocalDateTime.now();
    }
    
    public Map<String, Object> process(String data) {
        System.out.println("Processing data: " + data);
        
        Map<String, Object> result = new HashMap<>();
        result.put("status", "success");
        result.put("data", data);
        result.put("timestamp", createdAt.toString());
        
        return result;
    }
    
    public boolean validateInput(String data) {
        if (data == null || data.isEmpty()) {
            throw new IllegalArgumentException("Data cannot be empty");
        }
        return true;
    }
    
    public static void main(String[] args) {
        Solution solution = new Solution();
        Map<String, Object> result = solution.process("sample data");
        System.out.println(result);
    }
}
```

```java
// SolutionTest.java
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

import java.util.Map;

public class SolutionTest {
    private Solution solution;
    
    @BeforeEach
    void setUp() {
        solution = new Solution();
    }
    
    @Test
    void testProcess() {
        Map<String, Object> result = solution.process("test data");
        assertEquals("success", result.get("status"));
        assertEquals("test data", result.get("data"));
        assertNotNull(result.get("timestamp"));
    }
    
    @Test
    void testValidateInputValid() {
        assertTrue(solution.validateInput("valid data"));
    }
    
    @Test
    void testValidateInputEmpty() {
        assertThrows(IllegalArgumentException.class, () -> {
            solution.validateInput("");
        });
    }
}
```

```xml
<!-- pom.xml -->
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.example</groupId>
    <artifactId>solution</artifactId>
    <version>1.0.0</version>
    
    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <junit.version>5.9.0</junit.version>
    </properties>
    
    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
```

## Installation
1. Compile: `mvn compile`
2. Run: `mvn exec:java -Dexec.mainClass="Solution"`
3. Test: `mvn test`
